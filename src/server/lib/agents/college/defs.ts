/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/ScheduleForDate/{id}": {
    /** Read ScheduleForDate by ID */
    get: operations["get-ScheduleForDate"];
  };
  "/ScheduleForDate/FindByScheduleDate": {
    /** Find ScheduleForDate by scheduleDate */
    get: operations["get-ScheduleForDate-FindByScheduleDate"];
  };
  "/PeriodsSchedule/{id}": {
    /** Read PeriodsSchedule by ID */
    get: operations["get-PeriodsSchedule"];
  };
  "/Individual/{id}": {
    /** Read Individual by ID */
    get: operations["get-Individual-id"];
  };
  "/Individual/FindByEmail": {
    /** Find Individual by email */
    get: operations["get-Individual-FindByEmail"];
  };
  "/Individual/{id}/Student": {
    /** Read Student by Individual ID */
    get: operations["get-Individual-id-Student"];
  };
  "/Indivudial/{id}/Administrator": {
    /** Read Administrator by Individual ID */
    get: operations["get-Indivudial-id-Administrator"];
  };
  "/Student/{id}": {
    /** Read Student by ID */
    get: operations["get-Student-id"];
  };
  "/Student/{id}/Performance": {
    /** Read Student Performance by Student ID by Period */
    get: operations["get-Student-id-Marks-ByPeriod"];
  };
  "/Discipline/{id}": {
    /** Read Discipline by ID */
    get: operations["get-Discipline-id"];
  };
  "/PracticeKind/{id}": {
    /** Read Practice Kind by ID */
    get: operations["get-PracticeKind-id"];
  };
  "/ControlType/{id}": {
    /** Read Control Type by ID */
    get: operations["get-Control-Type-id"];
  };
  "/WorkType/{id}": {
    /** Read Work Type by ID */
    get: operations["get-Work-Type-id"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** ScheduleForDate */
    ScheduleForDate: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      periodScheduleId?: string;
      /** Format: date */
      scheduleDate?: string;
    };
    /** ReferenceNotFoundError */
    ReferenceNotFound: {
      /** @constant */
      code: "ReferenceNotFound";
      message: string;
      referenceType: string;
    };
    /** ScheduleForDate_ByScheduleDate */
    ScheduleForDate_ByScheduleDate: {
      /** Format: uuid */
      id: string;
      /** Format: uuid */
      periodScheduleId?: string;
      /** Format: date */
      scheduleDate: string;
    };
    /** NotFoundError */
    NotFound: {
      /** @constant */
      code: "NotFound";
      message: string;
    };
    /** PeriodsSchedule */
    PeriodsSchedule: {
      /** Format: uuid */
      id: string;
      name: string;
      schedule?: {
          periodNumber?: number;
          /** Format: time */
          startTime?: string;
          /** Format: time */
          endTime?: string;
        }[];
    };
    /** Individual */
    Individual: {
      id: string;
      fullName?: string;
      email?: string;
    };
    /** Individual_ByEmail */
    Individual_ByEmail: {
      id: string;
      fullName?: string;
      email: string;
    };
    /** Student */
    Student: {
      id: string;
      individualId: string;
    };
    /** Administrator */
    Administrator: {
      id: string;
      individualId: string;
    };
    /** Mark */
    Mark: {
      number: number;
      mark: number;
      /** Format: uuid */
      controlTypeId: string;
    } | {
      number: number;
      isPassed: boolean;
      /** Format: uuid */
      controlTypeId: string;
    };
    /** StudentPerformance */
    StudentPerformance: {
      /** @enum {string} */
      objectType: "statement" | "retakeReferral" | "stateCertificationBoardProtocol" | "practiceReport" | "incomingAcademicCertificate" | "additionalClass" | "class";
      /** Format: uuid */
      objectId: string;
      /** Format: date-time */
      date: string;
      discipline: {
        /** @enum {string} */
        objectType: "discipline" | "practiceKind";
        /** Format: uuid */
        objectId: string;
      };
      /** Format: uuid */
      workTypeId?: string;
      /** Format: uuid */
      controlTypeId?: string;
      isLate?: boolean;
      isAttended?: boolean;
      marks: components["schemas"]["Mark"][];
    };
    /** Discipline */
    Discipline: {
      id: string;
      title: string;
      shortTitle: string;
      fullTitle?: string;
    };
    /** Practice Kind */
    PracticeKind: {
      id: string;
      /** @enum {unknown} */
      practiceType?: "educational" | "internship" | "undergraduate";
      title: string;
      shortTitle: string;
      fullTitle?: string;
    };
    /** ControlType */
    ControlType: {
      id: string;
      title: string;
      markTypeId?: string;
    };
    /** WorkType */
    WorkType: {
      id: string;
      title: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Read ScheduleForDate by ID */
  "get-ScheduleForDate": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ScheduleForDate"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Find ScheduleForDate by scheduleDate */
  "get-ScheduleForDate-FindByScheduleDate": {
    parameters: {
      query?: {
        scheduleDate?: string;
      };
    };
    requestBody?: {
      content: {
        "*/*": never;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ScheduleForDate_ByScheduleDate"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** Read PeriodsSchedule by ID */
  "get-PeriodsSchedule": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PeriodsSchedule"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Individual by ID */
  "get-Individual-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Individual"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Find Individual by email */
  "get-Individual-FindByEmail": {
    parameters: {
      query: {
        email: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Individual_ByEmail"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** Read Student by Individual ID */
  "get-Individual-id-Student": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Student"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"] | components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** Read Administrator by Individual ID */
  "get-Indivudial-id-Administrator": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Administrator"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"] | components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** Read Student by ID */
  "get-Student-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Student"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Student Performance by Student ID by Period */
  "get-Student-id-Marks-ByPeriod": {
    parameters: {
      query: {
        periodStart: string;
        periodEnd: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["StudentPerformance"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Discipline by ID */
  "get-Discipline-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Discipline"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Practice Kind by ID */
  "get-PracticeKind-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PracticeKind"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Control Type by ID */
  "get-Control-Type-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["ControlType"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
  /** Read Work Type by ID */
  "get-Work-Type-id": {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["WorkType"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["ReferenceNotFound"];
        };
      };
    };
  };
}
